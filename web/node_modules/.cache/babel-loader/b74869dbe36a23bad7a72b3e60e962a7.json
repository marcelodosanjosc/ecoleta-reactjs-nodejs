{"ast":null,"code":"var _jsxFileName = \"/media/marcelo/D8E29F6CE29F4E1E/Rockeseat/NLW/aula/web/src/pages/CreatePoint/index.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { FiArrowLeft } from 'react-icons/fi';\nimport { Map, TileLayer, Marker } from 'react-leaflet';\nimport axios from 'axios';\nimport api from '../../services/api';\nimport Dropzone from '../../components/Dropzone';\nimport './styles.css';\nimport logo from \"../../assets/logo.svg\";\n\nconst CreatePoint = () => {\n  const [items, setItems] = useState([]);\n  const [ufs, setUfs] = useState([]);\n  const [cities, setCities] = useState([]);\n  const [initialPosition, setinitialPosition] = useState([0, 0]);\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    whatsapp: ''\n  });\n  const [selectedUf, setSelectedUf] = useState('0');\n  const [selectedCity, setSelectedCity] = useState('0');\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [selectedPosition, setSelectedPosition] = useState([0, 0]);\n  const [selectdFile, setSelectedFile] = useState();\n  const history = useHistory();\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      setinitialPosition([latitude, longitude]);\n    });\n  }, []);\n  useEffect(() => {\n    api.get('items').then(response => {\n      setItems(response.data);\n    });\n  }, []);\n  useEffect(() => {\n    axios.get('https://servicodados.ibge.gov.br/api/v1/localidades/estados').then(response => {\n      const ufInitials = response.data.map(uf => uf.sigla);\n      setUfs(ufInitials);\n    });\n  }, []);\n  useEffect(() => {\n    if (selectedUf === '0') {\n      return;\n    }\n\n    axios.get(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${selectedUf}/municipios`).then(response => {\n      const cityNames = response.data.map(city => city.nome);\n      setCities(cityNames);\n    });\n  }, [selectedUf]);\n\n  function handleSelectUf(event) {\n    const uf = event.target.value;\n    setSelectedUf(uf);\n  }\n\n  function handleSelectCity(event) {\n    const city = event.target.value;\n    setSelectedCity(city);\n  }\n\n  function handleMapClick(event) {\n    setSelectedPosition([event.latlng.lat, event.latlng.lng]);\n  }\n\n  function handleInputChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData({ ...formData,\n      [name]: value\n    });\n  }\n\n  function handleSelectItem(id) {\n    const alreadySelected = selectedItems.findIndex(item => item === id);\n\n    if (alreadySelected >= 0) {\n      const filteredItems = selectedItems.filter(item => item !== id);\n      setSelectedItems(filteredItems);\n    } else {\n      setSelectedItems([...selectedItems, id]);\n    }\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    const {\n      name,\n      email,\n      whatsapp\n    } = formData;\n    const uf = selectedUf;\n    const city = selectedCity;\n    const [latitude, longitude] = selectedPosition;\n    const items = selectedItems;\n    const data = new FormData();\n    data.append('name', name);\n    data.append('email', email);\n    data.append('whatsapp', whatsapp);\n    data.append('uf', uf);\n    data.append('city', city);\n    data.append('latitude', String(latitude));\n    data.append('longitude', String(longitude));\n    data.append('items', items.join(','));\n\n    if (selectdFile) {\n      data.append('image', selectdFile);\n    }\n\n    await api.post('points', data);\n    alert('Ponto de coleta criado!');\n    history.push('/');\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"page-create-point\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    alt: \"Ecoleta\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FiArrowLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 17\n    }\n  }), \"Volta para home\")), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, \"Cadastro do \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 29\n    }\n  }), \" ponto de coleta\"), /*#__PURE__*/React.createElement(Dropzone, {\n    onFileUploaded: setSelectedFile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 21\n    }\n  }, \"Dados\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 21\n    }\n  }, \"Nome da entidade\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    id: \"name\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 22\n    }\n  }, \"E-mail\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    id: \"email\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 22\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 18\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"whatsapp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 21\n    }\n  }, \"WhatsApp\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"whatsapp\",\n    id: \"whatsapp\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 21\n    }\n  })))), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 21\n    }\n  }, \"Endere\\xE7o\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 21\n    }\n  }, \"Selecione o endere\\xE7o no mapa\")), /*#__PURE__*/React.createElement(Map, {\n    center: initialPosition,\n    zoom: 15,\n    onClick: handleMapClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TileLayer, {\n    attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contribuidores\",\n    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Marker, {\n    position: selectedPosition,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 26\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"uf\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 25\n    }\n  }, \"Estado (UF)\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"uf\",\n    id: \"uf\",\n    value: selectedUf,\n    onChange: handleSelectUf,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 29\n    }\n  }, \"Selecione uma UF\"), ufs.map(uf => /*#__PURE__*/React.createElement(\"option\", {\n    key: uf,\n    value: uf,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 33\n    }\n  }, uf)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"city\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 25\n    }\n  }, \"Cidade\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"city\",\n    id: \"city\",\n    value: selectedCity,\n    onChange: handleSelectCity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 29\n    }\n  }, \"Selecione uma cidade\"), cities.map(city => /*#__PURE__*/React.createElement(\"option\", {\n    key: city,\n    value: city,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 33\n    }\n  }, city)))))), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 21\n    }\n  }, \"\\xCDtens de coletas\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 21\n    }\n  }, \"Selecione um ou mais itens abaixo \")), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"items-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 17\n    }\n  }, items.map(item => /*#__PURE__*/React.createElement(\"li\", {\n    key: item.id,\n    onClick: () => handleSelectItem(item.id),\n    className: selectedItems.includes(item.id) ? 'selected' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: item.image_url,\n    alt: item.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 25\n    }\n  }, item.title))))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 13\n    }\n  }, \"Cadastrar ponto de coleta\")));\n};\n\nexport default CreatePoint;","map":{"version":3,"sources":["/media/marcelo/D8E29F6CE29F4E1E/Rockeseat/NLW/aula/web/src/pages/CreatePoint/index.tsx"],"names":["React","useEffect","useState","Link","useHistory","FiArrowLeft","Map","TileLayer","Marker","axios","api","Dropzone","CreatePoint","items","setItems","ufs","setUfs","cities","setCities","initialPosition","setinitialPosition","formData","setFormData","name","email","whatsapp","selectedUf","setSelectedUf","selectedCity","setSelectedCity","selectedItems","setSelectedItems","selectedPosition","setSelectedPosition","selectdFile","setSelectedFile","history","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","get","then","response","data","ufInitials","map","uf","sigla","cityNames","city","nome","handleSelectUf","event","target","value","handleSelectCity","handleMapClick","latlng","lat","lng","handleInputChange","handleSelectItem","id","alreadySelected","findIndex","item","filteredItems","filter","handleSubmit","preventDefault","FormData","append","String","join","post","alert","push","logo","includes","image_url","title"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, ChangeEvent, FormEvent} from 'react'\nimport { Link, useHistory }  from 'react-router-dom'\nimport { FiArrowLeft}  from 'react-icons/fi'\nimport { Map, TileLayer, Marker} from 'react-leaflet'\nimport { LeafletMouseEvent } from 'leaflet'\nimport axios from 'axios'\nimport api from '../../services/api'\nimport Dropzone from '../../components/Dropzone'\n\nimport './styles.css'\n\nimport logo from '../../assets/logo.svg'\n\ninterface Item {\n    id: number,\n    title: string,\n    image_url: string\n}\n\ninterface IBGEUFResponse{\n    sigla: string\n}\n\ninterface IBGECityResponse{\n    nome: string\n}\n\nconst CreatePoint = () => { \n    const [items, setItems] = useState<Item[]>([])\n    const [ufs, setUfs] = useState<string[]>([])\n    const [cities, setCities] = useState<string[]>([])\n\n    const [initialPosition, setinitialPosition] = useState<[number, number]>([0, 0])\n\n    const [formData, setFormData] = useState({\n        name: '',\n        email: '',\n        whatsapp:''\n    })\n\n\n    const [selectedUf, setSelectedUf] = useState('0')\n    const [selectedCity, setSelectedCity] = useState('0')\n    const [selectedItems, setSelectedItems] = useState<number[]>([])\n    const [selectedPosition, setSelectedPosition] = useState<[number, number]>([0, 0])\n    const [selectdFile, setSelectedFile] = useState<File>()\n\n    const history = useHistory()\n\n    useEffect(() => {\n        navigator.geolocation.getCurrentPosition( position => {\n            const {latitude, longitude}  = position.coords\n\n            setinitialPosition([latitude, longitude])\n        })\n    },[])\n\n    useEffect(() => {\n        api.get('items').then(response => {\n            setItems(response.data)\n            \n        })\n    }, [])\n\n    useEffect(() => {\n        axios.get<IBGEUFResponse[]>('https://servicodados.ibge.gov.br/api/v1/localidades/estados').then(response => {\n            const ufInitials = response.data.map(uf => uf.sigla)\n            setUfs(ufInitials)\n        })\n    },[])\n\n    useEffect(() => {\n        if(selectedUf === '0'){\n            return\n        }\n\n        axios.get<IBGECityResponse[]>(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${selectedUf}/municipios`)\n        .then(response => {\n            const cityNames = response.data.map(city => city.nome)\n            setCities(cityNames)\n        })\n        \n    },[selectedUf])\n\n    function handleSelectUf(event: ChangeEvent<HTMLSelectElement>){\n         const uf  =    event.target.value\n\n        setSelectedUf(uf)\n    }\n\n    function handleSelectCity(event: ChangeEvent<HTMLSelectElement>){\n        const city  =    event.target.value\n\n       setSelectedCity(city)\n   }\n   function handleMapClick(event: LeafletMouseEvent){\n        setSelectedPosition([\n            event.latlng.lat,\n            event.latlng.lng\n        ])\n   }\n   function handleInputChange(event: ChangeEvent<HTMLInputElement>){\n       const {name, value} = event.target\n        setFormData({ ...formData, [name]: value})\n   }\n   function handleSelectItem(id: number){\n        const alreadySelected = selectedItems.findIndex(item => item === id)\n        if (alreadySelected >= 0){\n            const filteredItems = selectedItems.filter(item => item !== id)\n            setSelectedItems(filteredItems)\n        }else {\n\n            setSelectedItems([...selectedItems, id])\n        }\n       \n   }\n   async function handleSubmit(event: FormEvent){\n        event.preventDefault()\n\n\n        const { name, email, whatsapp} = formData\n        const uf = selectedUf\n        const city = selectedCity\n        const [latitude, longitude] = selectedPosition\n        const items = selectedItems\n\n        const data = new FormData()\n            data.append('name', name)\n            data.append('email', email)\n            data.append('whatsapp', whatsapp)\n            data.append('uf', uf)\n            data.append('city', city)\n            data.append('latitude', String(latitude))\n            data.append('longitude', String(longitude))\n            data.append('items', items.join(','))\n\n            if (selectdFile){\n            data.append('image', selectdFile)\n            }\n        \n        await api.post('points', data)\n        alert('Ponto de coleta criado!')\n\n        history.push('/')\n   }\n\n   \n\n    return (\n     <div id=\"page-create-point\">\n         <header>\n            <img src={logo} alt=\"Ecoleta\"/>\n            <Link to=\"/\">\n                <FiArrowLeft />\n             Volta para home\n            </Link>\n         </header>\n\n         <form onSubmit={handleSubmit}>\n            <h1>Cadastro do <br/> ponto de coleta</h1>\n\n            <Dropzone  onFileUploaded={setSelectedFile}/>\n\n            <fieldset>\n                <legend>\n                    <h2>Dados</h2>\n                </legend>\n                <div className=\"field\">\n                    <label htmlFor=\"name\">Nome da entidade</label>\n                    <input \n                    type=\"text\"\n                    name=\"name\"\n                    id=\"name\"\n                    onChange={handleInputChange}\n                    />\n                </div>\n                <div className=\"field-group\">\n                    <div className=\"field\">\n                     <label htmlFor=\"email\">E-mail</label>\n                     <input \n                     type=\"email\"\n                     name=\"email\"\n                     id=\"email\"\n                     onChange={handleInputChange}\n                    />\n                 </div>\n                 <div className=\"field\">\n                    <label htmlFor=\"whatsapp\">WhatsApp</label>\n                    <input \n                    type=\"text\"\n                    name=\"whatsapp\"\n                    id=\"whatsapp\"\n                    onChange={handleInputChange}\n                    />\n                </div>\n                 </div>\n            </fieldset>\n \n            <fieldset>\n                <legend>\n                    <h2>Endereço</h2>\n                    <span>Selecione o endereço no mapa</span>\n                </legend>\n\n                <Map center={initialPosition} zoom={15} onClick={handleMapClick}>\n                        < TileLayer\n                            attribution = '&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contribuidores'\n                             url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                         />\n                         <Marker position={selectedPosition}/>\n                </Map>\n\n                <div className=\"field-group\">\n                    <div className=\"field\">\n                        <label htmlFor=\"uf\">Estado (UF)</label>\n                        <select name=\"uf\" id=\"uf\" value={selectedUf} onChange={handleSelectUf}>\n                            <option value=\"0\">Selecione uma UF</option>\n                            {ufs.map(uf => (\n                                <option key={uf} value={uf}>{uf}</option>\n                            ))}\n                        </select>\n                    </div>\n                    <div className=\"field\">\n                        <label htmlFor=\"city\">Cidade</label>\n                        <select name=\"city\" id=\"city\" value={selectedCity} onChange={handleSelectCity}>\n                            <option value=\"0\">Selecione uma cidade</option>\n                            {cities.map(city => (\n                                <option key={city} value={city}>{city}</option>\n                            ))}\n                        </select>\n                    </div>\n                </div>\n\n            </fieldset>\n\n            <fieldset>\n                <legend>\n                    <h2>Ítens de coletas</h2>\n                    <span>Selecione um ou mais itens abaixo </span>\n                </legend>\n                <ul className=\"items-grid\">\n                    {items.map(item => (\n                    <li key={item.id} onClick={() => handleSelectItem(item.id)}\n                    className={selectedItems.includes(item.id) ? 'selected' : ''}\n                    >\n                        <img src={item.image_url} alt={item.title}/>\n                        <span>{item.title}</span>\n                    </li>\n                    ))}\n                   \n                </ul>\n            </fieldset>\n            <button type=\"submit\">\n                Cadastrar ponto de coleta\n            </button>\n         </form>\n     </div>\n    )\n}\n\nexport default CreatePoint"]},"metadata":{},"sourceType":"module"}